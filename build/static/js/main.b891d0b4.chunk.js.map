{"version":3,"sources":["Images/Unknownerror.png","Images/NetworkError.png","App.js","reportWebVitals.js","index.js"],"names":["App","props","collectionData","response","data","useState","city","setCity","month","setDate","newCollectionData","setnewCollectionData","useEffect","localStorage","getItem","JSON","parse","setItem","stringify","hasOwnProperty","error","image","nameEror","networkError","unknownError","message","style","src","alt","renderEror","arrCityMonyh","map","el","sort","arrCity","Array","from","Set","monyh","date","slice","arrMonyh","a","b","genData","vDomaCity","value","_","uniqueId","vDomaMonyh","Date","toLocaleString","className","onChange","event","target","multiple","filtrCity","filter","filtrMonth","featured","id","colorCheckbox","genre","width","height","String","name","type","onClick","elFeaturd","renderEvent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Init","renderDate","ReactDOM","render","StrictMode","document","getElementById","axios","get","undefined"],"mappings":"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","file":"static/js/main.b891d0b4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Unknownerror.fd125fbd.png\";","export default __webpack_public_path__ + \"static/media/NetworkError.df4aaa1f.png\";","import React from 'react';\nimport _ from 'lodash';\nimport { useState, useEffect } from 'react';\nimport unknownError from \"./Images/Unknownerror.png\";\nimport networkError from \"./Images/NetworkError.png\";\n\n\nconst genData = (collectionData) => {\n  const city = collectionData.map((el) => el.city).sort();\n  const arrCity = ['all', ...Array.from(new Set(city))];\n  const monyh = collectionData.map((el) => (el.date.slice(3, 5)))\n  const arrMonyh = ['all', ...Array.from(new Set(monyh)).sort((a, b) => a - b)];\n  return {arrCity, arrMonyh}\n}\n\nconst App = (props) => {\n\n  const collectionData = props.response.data;\n\n  const [city, setCity] = useState('all');\n  const [month, setDate] = useState('all');\n  const [newCollectionData, setnewCollectionData] = useState(collectionData);\n\n  useEffect(() => {\n    setCity((localStorage.getItem('city')));\n    setDate((localStorage.getItem('month')));\n    setnewCollectionData(JSON.parse(localStorage.getItem('newCollectionData')));\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('city', city)\n    localStorage.setItem('month', month);\n    localStorage.setItem(\"newCollectionData\", JSON.stringify(newCollectionData));\n  }, [city, month, newCollectionData,]);\n\n  const renderEror = (error) => {\n    const image = error.nameEror === 'networkError' ? networkError : unknownError;\n    const message  = error.nameEror === 'networkError' ? 'Проверьте соединение с интернетом' : 'Неизвестная ошибка';\n    return (\n      <div>\n        <h1 style={{'text-align': 'center' }}>{message}</h1>\n        <img src={image} alt={error.nameEror} style={{'width': '1000px', 'height': 'auto', 'display': 'block', 'margin-left': 'auto', 'margin-right': 'auto' }}/>\n      </div>)\n  }\n\n  if (props.response.hasOwnProperty('nameEror')) {\n    return renderEror(props.response);\n  }\n\n  const arrCityMonyh = genData(newCollectionData)\n\n  const renderEvent = () => {\n    const filtrCity = city === 'all' ? newCollectionData : newCollectionData.filter((el) => el.city === city);\n    const filtrMonth = month === 'all' ? filtrCity : filtrCity.filter((el) => el.date.slice(3, 5) === month);\n    \n    filtrMonth.sort((a, b) => a.date > b.date ? 1 : -1);\n\n    filtrMonth.sort( (a,b) =>  a.featured && !b.featured);\n    \n    return filtrMonth.map((el) => {\n      const id = el.id;\n      const image = 'https://www.pngwing.com/ru/free-png-pinvw';\n      el.hasOwnProperty('featured') &&  el.featured === true ? el.featured = false : el.featured = true;\n      const color = el.featured === true ? 'black' : '#fff';\n      const colorCheckbox  = { 'backgroundColor': color};\n      return (<div className=\"ss\"  key={_.uniqueId()}>\n      <img src={el.image} alt={el.genre} width=\"600\" height=\"400\"/>\n      <p>{String(el.date).slice(0, 2)}</p>\n       <h4>{el.name}</h4>\n       <button type=\"button\" value=\"\" style={colorCheckbox} src={image} onClick={() => setnewCollectionData(newCollectionData.map((elFeaturd) => {\n         if (elFeaturd.id === id) {\n          elFeaturd.featured = elFeaturd.featured === false ? true : false;\n         }\n         return elFeaturd;\n       }))}/>\n      </div>)\n    })\n  }\n\n  const vDomaCity = arrCityMonyh.arrCity.map((el) => {\n    return <option value={el} key={_.uniqueId()} >{el}</option>\n  })\n\n  const vDomaMonyh = arrCityMonyh.arrMonyh.map((el) => {\n    const date = new Date(`2021/${el}/01`);\n    const month = date.toLocaleString('en', { month: 'long' })\n    return <option value={el} key={_.uniqueId()}>{ el === 'all' ? el : month}</option>\n  })\n\n    return(\n      <div className=\"contener\">\n      <div className=\"contener-content\">\n          <div className=\"name-list\">\n              <h3>Event Listing</h3>\n          </div>\n          <div className=\"form-grup\">\n              <form className=\"form\">\n                  <div className=\"form-city\">\n                    <label>City :  </label>\n                    <select className=\"city\" onChange={(event) => setCity(event.target.value)} multiple={false} value={city}>\n                      <>\n                      {vDomaCity}\n                    </>\n                    </select>\n                  </div>\n                  <div className=\"form-month\">\n                    <label>Month :  </label>\n                    <select className=\"date\" onChange={(event) => setDate(event.target.value)} multiple={false} value={month}>\n                      <>\n                      {vDomaMonyh}\n                     </>\n                      </select>\n                  </div>\n                </form>\n          </div>\n              <div className=\"flex-container\">\n                <>\n                {renderEvent()}\n                </>\n             </div>\n      </div>\n  </div>\n    );\n  };\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './style.css';\nimport axios from 'axios';\n\nconst Init =  async () => {\n  const renderDate = (date) => {\n    return (ReactDOM.render(\n      <React.StrictMode>\n        <App response={date}/>\n      </React.StrictMode>,\n      document.getElementById('root')\n    ));\n  }\n  \n  try {\n    const response =  await axios.get(`https://raw.githubusercontent.com/xsolla/xsolla-frontend-school-2021/main/events.json`);\n    if (response === undefined) {\n      return renderDate({'nameEror': 'networkError'})\n    }\n      return renderDate(response)\n    } catch {\n    return renderDate({'nameEror': 'unknownError'})\n  }\n   \n};\n\nInit();\n\nreportWebVitals();\n"],"sourceRoot":""}